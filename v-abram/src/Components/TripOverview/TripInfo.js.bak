import React from 'react';
import { withStyles } from '@material-ui/core/styles';
import { Hidden } from '@material-ui/core/';
import { connect } from 'react-redux';
import DestinationDetail from '../ViewDestination/DestinationDetail';
import OriginDetail from '../ViewDestination/OriginDetail';
import * as helpers from '../helpers/helpers.js';

const styles = (theme) => ({
  container: {
    [theme.breakpoints.up('md')]: {
      display: 'flex',
      flexDirection: 'column',
    },
  },
  paper: {
    // padding: '20px 20px 0 20px',
    padding: 20,
    maxWidth: 700,
    // backgroundColor: '#f3f3f3',
    [theme.breakpoints.down('md')]: {
      margin: '0 auto',
    },
    [theme.breakpoints.up('md')]: {
      border: '1px solid #d4d4d4',
      borderLeft: 0,
    },
    // backgroundColor: '#dfd3c3',
  },
  button: {
    display: 'flex',
    margin: '0px auto 10px',
    // border: '5px solid white',
  },
  input: {
    display: 'none',
  },
});

function TripOverview(props){
  const { classes, states, lengths, start_date } = props;
  console.log(states);

  return (
    <div style={{ display: 'flex', flexDirection: 'column', width: '100%' }}>
      <div className={classes.container}>
        {/* <Paper className={classes.paper}> */}

        {/* </Paper> */}

        <Hidden smDown implementation='js'>
          <DestinationDetail
            city={{
              ...states[1],
              percentage: helpers.calculatePercentage(1, lengths),
              dates: helpers.getTextDateFromStartDate(lengths, start_date, 1),
            }}
          />
          {/* <OriginDetail /> */}
        </Hidden>

        {/* end flexDirection: row */}
      </div>

      {/* end flexDirection: column */}
    </div>
  );
}

const mapStoreToProps = (store) => ({
  today: store.explore.today,
  start_date: store.explore.start_date,
  states: store.explore.states,
  origin: store.explore.origin,
  lengths: store.explore.lengths,
  kiwi_links_historical: store.explore.kiwi_links_historical,
});

const mapDispatchToProps = (dispatch) => ({
  // fetchInitCitiesAirportData: () => dispatch(exploreActions.fetchInitCitiesAirportData()),
});

export default connect(mapStoreToProps, mapDispatchToProps)(
  withStyles(styles, { withTheme: true })(TripOverview)
);
